<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:local="clr-namespace:MeisterWill.WindowsExplorer">
    <!--region Color Definitions-->
    <Color x:Key="ItemNormalColor">White</Color>
    <Color x:Key="ItemMouseOverColor">#FFE5F3FF</Color>
    <Color x:Key="ItemSelectedColor">#FFCCE8FF</Color>
    <Color x:Key="ItemSelectedInactiveColor">LightGray</Color>
    <Color x:Key="ItemDisabledColor">Gray</Color>
    <!--endregion-->
    <Style x:Key="headerBorderStyleKey" TargetType="Border">
        <Setter Property="HorizontalAlignment" Value="Stretch"/>
        <Setter Property="Background" Value="{Binding Background, RelativeSource={RelativeSource TemplatedParent}}"/>
        <Setter Property="BorderBrush" Value="{Binding BorderBrush, RelativeSource={RelativeSource TemplatedParent}}"/>
        <Setter Property="BorderThickness" Value="{Binding BorderThickness, RelativeSource={RelativeSource TemplatedParent}}"/>
        <Setter Property="Padding" Value="{Binding Padding, RelativeSource={RelativeSource TemplatedParent}}"/>
        <Style.Triggers>
            <MultiDataTrigger>
                <MultiDataTrigger.Conditions>
                    <Condition Binding="{Binding IsSelected, RelativeSource={RelativeSource TemplatedParent}}" Value="false"/>
                    <Condition Binding="{Binding (Border.IsMouseOver), RelativeSource={RelativeSource Self}}" Value="true"/>
                </MultiDataTrigger.Conditions>
                <MultiDataTrigger.Setters>
                    <Setter Property="Background" >
                        <Setter.Value>
                            <SolidColorBrush Color="{StaticResource ItemMouseOverColor}"/>
                        </Setter.Value>
                    </Setter>
                </MultiDataTrigger.Setters>
            </MultiDataTrigger>
            <MultiDataTrigger>
                <MultiDataTrigger.Conditions>
                    <Condition Binding="{Binding IsSelected, RelativeSource={RelativeSource TemplatedParent}}" Value="true"/>
                    <Condition Binding="{Binding IsFocused, RelativeSource={RelativeSource TemplatedParent}}" Value="true"/>
                </MultiDataTrigger.Conditions>
                <MultiDataTrigger.Setters>
                    <Setter Property="Background" >
                        <Setter.Value>
                            <SolidColorBrush Color="{StaticResource ItemSelectedColor}"/>
                        </Setter.Value>
                    </Setter>
                </MultiDataTrigger.Setters>
            </MultiDataTrigger>
            <MultiDataTrigger>
                <MultiDataTrigger.Conditions>
                    <Condition Binding="{Binding IsSelected, RelativeSource={RelativeSource TemplatedParent}}" Value="true"/>
                    <Condition Binding="{Binding IsFocused, RelativeSource={RelativeSource TemplatedParent}}" Value="false"/>
                </MultiDataTrigger.Conditions>
                <MultiDataTrigger.Setters>
                    <Setter Property="Background" >
                        <Setter.Value>
                            <SolidColorBrush Color="{StaticResource ItemSelectedInactiveColor}"/>
                        </Setter.Value>
                    </Setter>
                </MultiDataTrigger.Setters>
            </MultiDataTrigger>
        </Style.Triggers>
    </Style>
    <ControlTemplate x:Key="TreeListViewItemTemplateKey" TargetType="local:TreeListViewItem">
        <VirtualizingStackPanel>
            <Border Style="{StaticResource headerBorderStyleKey}"
                    x:Name="headBorder">
                <ContentPresenter x:Name="PART_Header"
                                  Focusable="False"
                                  ContentSource="Header"/>
            </Border>
            <ItemsPresenter x:Name="PART_Children"
                            Visibility="Collapsed"/>
            <VisualStateManager.VisualStateGroups>
                <VisualStateGroup x:Name="CommonStates">
                    <VisualState x:Name="Normal"/>
                    <VisualState x:Name="Disabled">
                        <Storyboard>
                            <ColorAnimation Duration="0"
                                            To="{StaticResource ItemDisabledColor}"
                                            Storyboard.TargetName="headBorder"
                                            Storyboard.TargetProperty="(Border.Background).(SolidColorBrush.Color)"/>
                            <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Visibility)"
                                                           Storyboard.TargetName="PART_Children">
                                <DiscreteObjectKeyFrame KeyTime="0"
                                                        Value="{x:Static Visibility.Collapsed}" />
                            </ObjectAnimationUsingKeyFrames>
                        </Storyboard>
                    </VisualState>
                </VisualStateGroup>
                <VisualStateGroup Name="ExpansionStates">
                    <VisualState x:Name="Expanded">
                        <Storyboard>
                            <ObjectAnimationUsingKeyFrames Storyboard.TargetName="PART_Children"
                                                           Storyboard.TargetProperty="(UIElement.Visibility)">
                                <DiscreteObjectKeyFrame KeyTime="0"
                                                        Value="{x:Static Visibility.Visible}"/>
                            </ObjectAnimationUsingKeyFrames>
                        </Storyboard>
                    </VisualState>
                    <VisualState x:Name="Collapsed"/>
                </VisualStateGroup>
            </VisualStateManager.VisualStateGroups>
        </VirtualizingStackPanel>
    </ControlTemplate>
    <Style TargetType="{x:Type local:TreeListViewItem}">
        <Setter Property="Background" Value="Transparent"/>
        <Setter Property="Template" Value="{StaticResource TreeListViewItemTemplateKey}"/>
    </Style>
    <ControlTemplate x:Key="GridTreeListViewItemTemplateKey" TargetType="local:GridTreeListViewItem">
        <VirtualizingStackPanel>
            <Border Style="{StaticResource headerBorderStyleKey}"
                    x:Name="headBorder">
                <GridViewRowPresenter x:Name="PART_Header"
                                      Content="{TemplateBinding Header}"
                                      Columns="{Binding Columns, RelativeSource={RelativeSource AncestorType=local:GridTreeListView}}"/>
            </Border>
            <ItemsPresenter x:Name="PART_Children"
                            Visibility="Collapsed"/>
            <VisualStateManager.VisualStateGroups>
                <VisualStateGroup x:Name="CommonStates">
                    <VisualState x:Name="Normal"/>
                    <VisualState x:Name="Disabled">
                        <Storyboard>
                            <ColorAnimation Duration="0"
                                            To="{StaticResource ItemDisabledColor}"
                                            Storyboard.TargetName="headBorder"
                                            Storyboard.TargetProperty="(Border.Background).(SolidColorBrush.Color)"/>
                            <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Visibility)"
                                                           Storyboard.TargetName="PART_Children">
                                <DiscreteObjectKeyFrame KeyTime="0"
                                                        Value="{x:Static Visibility.Collapsed}" />
                            </ObjectAnimationUsingKeyFrames>
                        </Storyboard>
                    </VisualState>
                </VisualStateGroup>
                <VisualStateGroup Name="ExpansionStates">
                    <VisualState x:Name="Expanded">
                        <Storyboard>
                            <ObjectAnimationUsingKeyFrames Storyboard.TargetName="PART_Children"
                                                           Storyboard.TargetProperty="(UIElement.Visibility)">
                                <DiscreteObjectKeyFrame KeyTime="0"
                                                        Value="{x:Static Visibility.Visible}"/>
                            </ObjectAnimationUsingKeyFrames>
                        </Storyboard>
                    </VisualState>
                    <VisualState x:Name="Collapsed"/>
                </VisualStateGroup>
            </VisualStateManager.VisualStateGroups>
        </VirtualizingStackPanel>
    </ControlTemplate>
    <Style TargetType="{x:Type local:GridTreeListViewItem}">
        <Setter Property="Background" Value="Transparent"/>
        <Setter Property="Template" Value="{StaticResource GridTreeListViewItemTemplateKey}"/>
    </Style>
</ResourceDictionary>