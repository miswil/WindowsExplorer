<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:local="clr-namespace:WindowsExplorer">
    <!--region Color Definitions-->
    <Color x:Key="ItemMouseOverColor">#FFE5F3FF</Color>
    <Color x:Key="ItemMouseOverBorderColor">#FFCCE8FF</Color>
    <Color x:Key="ItemFocusedColor">#FFCCE8FF</Color>
    <Color x:Key="ItemFocusedBorderColor">#FF99D1FF</Color>
    <!--endregion-->
    <VisualStateGroup x:Key="PathViewItemCommonVisualStateGroup" x:Name="CommonStates">
        <VisualState x:Name="Normal">
            <VisualState.Storyboard>
                <Storyboard>
                    <ColorAnimation Duration="0" To="Transparent" Storyboard.TargetName="PART_PathButton" Storyboard.TargetProperty="(Button.Background).(SolidColorBrush.Color)"/>
                    <ColorAnimation Duration="0" To="Transparent" Storyboard.TargetName="PART_PathButton" Storyboard.TargetProperty="(Button.BorderBrush).(SolidColorBrush.Color)"/>
                    <ColorAnimation Duration="0" To="Transparent" Storyboard.TargetName="PART_ExpandToggleButton" Storyboard.TargetProperty="(Button.Background).(SolidColorBrush.Color)"/>
                    <ColorAnimation Duration="0" To="Transparent" Storyboard.TargetName="PART_ExpandToggleButton" Storyboard.TargetProperty="(Button.BorderBrush).(SolidColorBrush.Color)"/>
                </Storyboard>
            </VisualState.Storyboard>
        </VisualState>
        <VisualState x:Name="MouseOver">
            <VisualState.Storyboard>
                <Storyboard>
                    <ColorAnimation Duration="0" To="{StaticResource ItemMouseOverColor}" Storyboard.TargetName="PART_PathButton" Storyboard.TargetProperty="(Button.Background).(SolidColorBrush.Color)"/>
                    <ColorAnimation Duration="0" To="{StaticResource ItemMouseOverBorderColor}" Storyboard.TargetName="PART_PathButton" Storyboard.TargetProperty="(Button.BorderBrush).(SolidColorBrush.Color)"/>
                    <ColorAnimation Duration="0" To="{StaticResource ItemMouseOverColor}" Storyboard.TargetName="PART_ExpandToggleButton" Storyboard.TargetProperty="(Button.Background).(SolidColorBrush.Color)"/>
                    <ColorAnimation Duration="0" To="{StaticResource ItemMouseOverBorderColor}" Storyboard.TargetName="PART_ExpandToggleButton" Storyboard.TargetProperty="(Button.BorderBrush).(SolidColorBrush.Color)"/>
                </Storyboard>
            </VisualState.Storyboard>
        </VisualState>
        <VisualState x:Name="Expand">
            <VisualState.Storyboard>
                <Storyboard>
                    <ColorAnimation Duration="0" To="{StaticResource ItemFocusedColor}" Storyboard.TargetName="PART_PathButton" Storyboard.TargetProperty="(Button.Background).(SolidColorBrush.Color)"/>
                    <ColorAnimation Duration="0" To="{StaticResource ItemFocusedBorderColor}" Storyboard.TargetName="PART_PathButton" Storyboard.TargetProperty="(Button.BorderBrush).(SolidColorBrush.Color)"/>
                    <ColorAnimation Duration="0" To="{StaticResource ItemFocusedColor}" Storyboard.TargetName="PART_ExpandToggleButton" Storyboard.TargetProperty="(Button.Background).(SolidColorBrush.Color)"/>
                    <ColorAnimation Duration="0" To="{StaticResource ItemFocusedBorderColor}" Storyboard.TargetName="PART_ExpandToggleButton" Storyboard.TargetProperty="(Button.BorderBrush).(SolidColorBrush.Color)"/>
                </Storyboard>
            </VisualState.Storyboard>
        </VisualState>
    </VisualStateGroup>
    <ControlTemplate x:Key="PathButtonTemplate" TargetType="{x:Type Button}">
        <Border Background="{TemplateBinding Background}"
                BorderThickness="{TemplateBinding BorderThickness}"
                BorderBrush="{TemplateBinding BorderBrush}">
            <ContentPresenter Style="{Binding ItemContainerStyle, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type local:PathView}}}"
                              ContentTemplate="{Binding HeaderTemplate, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type local:PathViewItem}}}"
                              ContentTemplateSelector="{Binding HeaderTemplateSelector, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type local:PathViewItem}}}"/>
        </Border>
    </ControlTemplate>
    <ControlTemplate x:Key="ExpandToggleButtonTemplate" TargetType="ToggleButton">
        <Border Background="{TemplateBinding Background}"
                BorderThickness="{TemplateBinding BorderThickness}"
                BorderBrush="{TemplateBinding BorderBrush}">
            <Path Name="PART_ExpandButtonContent"
                  Stroke="Gray"
                  StrokeThickness="1"
                  StrokeStartLineCap="Round"
                  StrokeEndLineCap="Round"
                  Data="M 0 0 L 3 3 L 0 6"
                  Margin="3,0"
                  HorizontalAlignment="Center"
                  VerticalAlignment="Center">
                <Path.RenderTransform>
                    <RotateTransform x:Name="ExpandRotation"
                                     Angle="0"
                                     CenterX="2.5" CenterY="3"/>
                </Path.RenderTransform>
            </Path>
            <VisualStateManager.VisualStateGroups>
                <VisualStateGroup x:Name="CheckStates">
                    <VisualState x:Name="Unchecked"/>
                    <VisualState x:Name="Checked">
                        <VisualState.Storyboard>
                            <Storyboard>
                                <DoubleAnimation Duration="0" To="90" Storyboard.TargetName="ExpandRotation" Storyboard.TargetProperty="Angle"/>
                            </Storyboard>
                        </VisualState.Storyboard>
                    </VisualState>
                </VisualStateGroup>
            </VisualStateManager.VisualStateGroups>
        </Border>
    </ControlTemplate>
    <ControlTemplate x:Key="PathViewItemDefaultTemplate" TargetType="{x:Type local:PathViewItem}">                    <!--<ThicknessAnimation Duration="0" To="1" Storyboard.TargetName="PART_ExpandToggleButton" Storyboard.TargetProperty="BorderThickness"/>-->
        <Grid VerticalAlignment="Center">
            <VisualStateManager.VisualStateGroups>
                <StaticResource ResourceKey="PathViewItemCommonVisualStateGroup"/>
            </VisualStateManager.VisualStateGroups>
            <Grid.ColumnDefinitions>
                <ColumnDefinition/>
                <ColumnDefinition/>
            </Grid.ColumnDefinitions>
            <Button x:Name="PART_PathButton"
                    BorderThickness="{TemplateBinding BorderThickness}"
                    BorderBrush="{TemplateBinding BorderBrush}"
                    Content="{TemplateBinding Header}"
                    Background="Transparent"
                    Template="{StaticResource PathButtonTemplate}"/>
            <DockPanel Grid.Column="1"
                       LastChildFill="True">
                <ToggleButton Name="PART_ExpandToggleButton"
                              BorderThickness="{TemplateBinding BorderThickness}"
                              BorderBrush="{TemplateBinding BorderBrush}"
                              IsThreeState="False"
                              Template="{StaticResource ExpandToggleButtonTemplate}"
                              Background="Transparent"/>
                <Popup Name="PART_Popup"
                       PlacementTarget="{Binding .,ElementName= PART_ExpandToggleButton}"
                       Placement="Bottom"
                       HorizontalOffset="-30"
                       IsOpen="{Binding (ToggleButton.IsChecked), ElementName=PART_ExpandToggleButton}">
                    <ItemsPresenter/>
                </Popup>
            </DockPanel>
        </Grid>
    </ControlTemplate>
    <Style TargetType="{x:Type local:PathViewItem}">
        <Setter Property="Template" Value="{StaticResource PathViewItemDefaultTemplate}"/>
        <Setter Property="SnapsToDevicePixels" Value="True"/>
        <Setter Property="UseLayoutRounding" Value="True"/>
        <Setter Property="BorderThickness" Value="1"/>
        <Setter Property="BorderBrush" Value="Transparent"/>
    </Style>
</ResourceDictionary>